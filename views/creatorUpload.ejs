<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Preset | PresetMarket</title>
    <style>
        :root {
            --primary: #000000;
            --secondary: #1a1a1a;
            --accent: #0071e3;
            --text: #f5f5f7;
            --text-secondary: #86868b;
            --card-bg: #161617;
            --gap: 24px;
            --success: #34c759;
            --error: #ff3b30;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        body {
            background-color: var(--primary);
            color: var(--text);
            line-height: 1.5;
        }
        
        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 0 32px;
        }
        
        header {
            padding: 24px 0;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            position: sticky;
            top: 0;
            background-color: rgba(0,0,0,0.8);
            backdrop-filter: blur(20px);
            z-index: 100;
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 600;
            color: var(--text);
            text-decoration: none;
        }
        
        .nav-links {
            display: flex;
            gap: 32px;
        }
        
        .nav-links a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s;
        }
        
        .nav-links a:hover, .nav-links a.active {
            color: var(--text);
        }
        
        .user-actions {
            display: flex;
            gap: 16px;
            position: relative;
        }
        
        .profile-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            background: transparent;
            border: none;
            color: var(--text);
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
        }
        
        .profile-btn:hover {
            color: var(--accent);
        }
        
        .profile-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            background: var(--secondary);
            border-radius: 8px;
            padding: 8px 0;
            min-width: 180px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.3);
            z-index: 101;
            display: none;
        }
        
        .profile-dropdown.active {
            display: block;
        }
        
        .profile-dropdown a {
            display: block;
            padding: 8px 16px;
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .profile-dropdown a:hover {
            color: var(--text);
            background: rgba(255,255,255,0.05);
        }
        
        .profile-dropdown .divider {
            height: 1px;
            background: rgba(255,255,255,0.1);
            margin: 8px 0;
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 24px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-outline {
            background: transparent;
            color: var(--accent);
            border: 1px solid var(--accent);
        }
        
        .btn-outline:hover {
            background: rgba(0, 113, 227, 0.1);
        }
        
        .btn-filled {
            background: var(--accent);
            color: white;
        }
        
        .btn-filled:hover {
            background: #0077ed;
        }
        
        .btn-large {
            padding: 16px 32px;
            font-size: 16px;
            border-radius: 32px;
        }
        
        .back-btn {
            background: var(--secondary);
            color: var(--text);
            border: none;
            padding: 12px 24px;
            font-size: 16px;
            border-radius: 30px;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 24px;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .back-btn:hover {
            background: #2a2a2a;
        }
        
        .creator-dashboard {
            padding: 80px 0;
            display: flex;
            gap: 64px;
        }
        
        .creator-sidebar {
            width: 280px;
            flex-shrink: 0;
        }
        
        .creator-nav {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 24px;
        }
        
        .creator-nav h3 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 24px;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .creator-nav h3::before {
            content: "";
            display: block;
            width: 24px;
            height: 24px;
            background: var(--accent);
            border-radius: 6px;
        }
        
        .creator-nav ul {
            list-style: none;
        }
        
        .creator-nav li {
            margin-bottom: 16px;
        }
        
        .creator-nav a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 12px;
            transition: color 0.3s;
        }
        
        .creator-nav a::before {
            content: "";
            display: block;
            width: 8px;
            height: 8px;
            background: var(--text-secondary);
            border-radius: 50%;
            transition: background 0.3s;
        }
        
        .creator-nav a:hover, .creator-nav a.active {
            color: var(--text);
        }
        
        .creator-nav a.active::before, .creator-nav a:hover::before {
            background: var(--accent);
        }
        
        .creator-content {
            flex: 1;
        }
        
        .page-header {
            margin-bottom: 48px;
        }
        
        .page-header h1 {
            font-size: 40px;
            font-weight: 600;
            margin-bottom: 16px;
        }
        
        .page-header p {
            color: var(--text-secondary);
            font-size: 18px;
        }
        
        .upload-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 48px;
            margin-bottom: 64px;
        }
        
        .form-group {
            margin-bottom: 32px;
        }
        
        .form-group label {
            display: block;
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 12px;
        }
        
        .form-group input, .form-group textarea, .form-group select {
            width: 100%;
            padding: 16px;
            border-radius: 12px;
            border: none;
            background: var(--secondary);
            color: var(--text);
            font-size: 16px;
        }
        
        .form-group textarea {
            min-height: 120px;
            resize: vertical;
        }
        
        .form-group .hint {
            color: var(--text-secondary);
            font-size: 14px;
            margin-top: 8px;
        }
        
        .file-upload {
            border: 2px dashed rgba(255,255,255,0.1);
            border-radius: 12px;
            padding: 48px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .file-upload:hover {
            border-color: var(--accent);
            background: rgba(0, 113, 227, 0.05);
        }
        
        .file-upload-icon {
            font-size: 48px;
            margin-bottom: 16px;
            color: var(--accent);
        }
        
        .file-upload-text {
            margin-bottom: 8px;
        }
        
        .file-upload-subtext {
            color: var(--text-secondary);
            font-size: 14px;
        }
        
        .preview-images {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 16px;
            margin-top: 24px;
        }
        
        .preview-image {
            height: 120px;
            background: var(--secondary);
            border-radius: 8px;
            overflow: hidden;
            position: relative;
        }
        
        .preview-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .remove-image {
            position: absolute;
            top: 8px;
            right: 8px;
            width: 24px;
            height: 24px;
            background: rgba(0,0,0,0.7);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }
        
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 16px;
        }
        
        .notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 12px 24px;
            border-radius: 8px;
            color: white;
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        }
        
        .notification.success {
            background-color: var(--success);
        }
        
        .notification.error {
            background-color: var(--error);
        }
        
        @keyframes slideIn {
            from { transform: translateY(100px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        
        footer {
            padding: 64px 0;
            border-top: 1px solid rgba(255,255,255,0.1);
        }
        
        .footer-content {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 40px;
        }
        
        .footer-column h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 16px;
            color: var(--text);
        }
        
        .footer-column ul {
            list-style: none;
        }
        
        .footer-column ul li {
            margin-bottom: 12px;
        }
        
        .footer-column ul li a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: color 0.3s;
        }
        
        .footer-column ul li a:hover {
            color: var(--text);
        }
        
        .copyright {
            margin-top: 64px;
            text-align: center;
            color: var(--text-secondary);
            font-size: 14px;
        }
        
        @media (max-width: 1024px) {
            .creator-dashboard {
                flex-direction: column;
                gap: 32px;
            }
            
            .creator-sidebar {
                width: 100%;
            }
            
            .preview-images {
                grid-template-columns: repeat(3, 1fr);
            }
        }
        
        @media (max-width: 768px) {
            .upload-card {
                padding: 32px;
            }
            
            .page-header h1 {
                font-size: 32px;
            }
            
            .preview-images {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav>
                <a href="dashboard" class="logo">PresetMarket</a>
                <div class="nav-links">
                    <a href="creatorDashboard">Dashboard</a>
                    <a href="creatorUpload" class="active">Upload</a>
                </div>
                <div class="user-actions">
                    <button class="profile-btn" id="profileBtn">
                        <span class="name">Hello, User!</span>
                        <span>▼</span>
                    </button>
                    <div class="profile-dropdown" id="profileDropdown">
                        <a href="profile.html">Profile Info</a>
                        <a href="settings.html">Settings</a>
                        <div class="divider"></div>
                        <a href="logout" id="logoutBtn">Logout</a>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    
    <main>
        <section class="creator-dashboard container">
            <div class="creator-sidebar">
                <div class="creator-nav">
                    <h3>StudioNord</h3>
                    <ul>
                        <li><a href="creatorDashboard">Dashboard</a></li>
                        <li><a href="creatorUpload" class="active">Upload Preset</a></li>
                        <li><a href="#">My Presets</a></li>
                        <li><a href="#">Sales & Earnings</a></li>
                        <li><a href="#">Analytics</a></li>
                        <li><a href="#">Account Settings</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="creator-content">
                <div class="page-header">
                    <h1>Upload New Preset</h1>
                    <p>Share your creative work with our community of passionate creators and buyers</p>
                </div>
                
                <div class="upload-card">
                    <form id="presetForm" enctype="multipart/form-data" method="POST" action="/api/presets">
                        <input type="hidden" id="preset-id" name="_id" value="">
                        
                        <div class="form-group">
                            <label for="preset-title">Preset Title</label>
                            <input type="text" id="preset-title" name="title" placeholder="e.g. Nordic Lightroom Preset Pack" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="preset-description">Description</label>
                            <textarea id="preset-description" name="description" placeholder="Describe your preset..." required></textarea>
                        </div>
                        
                        <div class="form-group">
                            <label for="preset-category">Category</label>
                            <select id="preset-category" name="category" required>
                                <option value="">Select a category</option>
                                <option value="photography">Photography</option>
                                <option value="video">Video</option>
                                <option value="audio">Audio</option>
                                <option value="design">Design</option>
                                <option value="3d">3D</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="preset-price">Price (USD)</label>
                            <input type="number" id="preset-price" name="price" placeholder="24.99" step="0.01" min="0" required>
                        </div>
                        
                        <div class="form-group">
                            <label>Preview Images</label>
                            <div class="file-upload" id="previewImagesUpload">
                                <div class="file-upload-icon">↑</div>
                                <div class="file-upload-text">Drag & drop images here</div>
                                <div class="file-upload-subtext">or click to browse files (JPEG, PNG, max 5MB each)</div>
                                <input type="file" name="previewImages" id="previewImages" style="display: none;" accept="image/*" multiple>
                            </div>
                            <div class="preview-images" id="previewImagesContainer"></div>
                        </div>
                        
                        <div class="form-group">
                            <label>Preset Files</label>
                            <div class="file-upload" id="presetFilesUpload">
                                <div class="file-upload-icon">↑</div>
                                <div class="file-upload-text">Drag & drop preset files here</div>
                                <div class="file-upload-subtext">or click to browse files (ZIP, LRTEMPLATE, CUBE, etc.)</div>
                                <input type="file" name="presetFiles" id="presetFiles" style="display: none;" accept=".zip,.lrtemplate,.cube" required>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="compatibility">Compatibility</label>
                            <input type="text" id="compatibility" name="compatibility" placeholder="e.g. Lightroom Classic CC 2015+..." required>
                        </div>
                        
                        <div class="form-group">
                            <label for="tags">Tags (optional)</label>
                            <input type="text" id="tags" name="tags" placeholder="e.g. lightroom, preset, photography">
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn btn-outline btn-large">Save Draft</button>
                            <button type="submit" class="btn btn-filled btn-large">Publish Preset</button>
                        </div>
                    </form>
                    
                    <button class="back-btn" onclick="window.location.href='/creatorDashboard'">
                        ← Back to Dashboard
                    </button>
                </div>
            </div>
        </section>
    </main>
    
    <footer>
        <div class="container">
            <div class="copyright">
                <p>© 2023 PresetMarket. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        const username = "<%=username%>";
        const name = document.querySelector('.name');
        name.innerText=`hello! ${username}`;

        // Profile dropdown functionality
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');
        
        profileBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('active');
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            profileDropdown.classList.remove('active');
        });
        


        // Handle file upload click
        document.getElementById('previewImagesUpload').addEventListener('click', () => {
            document.getElementById('previewImages').click();
        });
        
        document.getElementById('presetFilesUpload').addEventListener('click', () => {
            document.getElementById('presetFiles').click();
        });

        // Handle preview image selection and display
        document.getElementById('previewImages').addEventListener('change', function(e) {
            const files = e.target.files;
            const previewContainer = document.getElementById('previewImagesContainer');
            
            // Clear existing previews
            previewContainer.innerHTML = '';
            
            if (files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            const previewImage = document.createElement('div');
                            previewImage.className = 'preview-image';
                            previewImage.innerHTML = `
                                <img src="${e.target.result}" alt="Preview ${i+1}">
                                <div class="remove-image" data-index="${i}">×</div>
                            `;
                            previewContainer.appendChild(previewImage);
                        }
                        reader.readAsDataURL(file);
                    }
                }
            }
        });

        // Handle form submission with _id support
        document.getElementById('presetForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const form = e.target;
            const formData = new FormData(form);
            const presetId = document.getElementById('preset-id').value;
            const method = presetId ? 'PUT' : 'POST';
            const url = presetId ? `/api/presets/${presetId}` : '/api/presets';

            try {
                const response = await fetch(url, {
                    method: method,
                    body: formData,
                });
                
                if (response.ok) {
                    const result = await response.json();
                    if (!presetId && result._id) {
                        document.getElementById('preset-id').value = result._id;
                    }
                    showNotification('Preset saved successfully!', 'success');
                } else {
                    const error = await response.json();
                    showNotification(error.message || 'Failed to save preset', 'error');
                }
            } catch (err) {
                console.error('Upload failed:', err);
                showNotification('Network error. Please try again.', 'error');
            }
        });

        // Function to load preset data if editing
        async function loadPreset(presetId) {
            try {
                const response = await fetch(`/api/presets/${presetId}`);
                if (response.ok) {
                    const preset = await response.json();
                    // Populate form fields
                    document.getElementById('preset-id').value = preset._id;
                    document.getElementById('preset-title').value = preset.title;
                    document.getElementById('preset-description').value = preset.description;
                    document.getElementById('preset-category').value = preset.category;
                    document.getElementById('preset-price').value = preset.price;
                    document.getElementById('compatibility').value = preset.compatibility;
                    document.getElementById('tags').value = preset.tags;
                    
                    // Handle images preview
                    if (preset.previewImages && preset.previewImages.length > 0) {
                        const previewContainer = document.getElementById('previewImagesContainer');
                        previewContainer.innerHTML = '';
                        preset.previewImages.forEach((imgUrl, index) => {
                            const previewImage = document.createElement('div');
                            previewImage.className = 'preview-image';
                            previewImage.innerHTML = `
                                <img src="${imgUrl}" alt="Preview ${index+1}">
                                <div class="remove-image" data-index="${index}">×</div>
                            `;
                            previewContainer.appendChild(previewImage);
                        });
                    }
                    
                    // Update page title
                    document.querySelector('.page-header h1').textContent = 'Edit Preset';
                } else {
                    showNotification('Failed to load preset data', 'error');
                }
            } catch (err) {
                console.error('Error loading preset:', err);
                showNotification('Network error loading preset', 'error');
            }
        }

        // Helper function for notifications
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            document.body.appendChild(notification);
            setTimeout(() => notification.remove(), 3000);
        }

        // Check if we're editing a preset on page load
        document.addEventListener('DOMContentLoaded', () => {
            const params = new URLSearchParams(window.location.search);
            const presetId = params.get('id');
            if (presetId) {
                loadPreset(presetId);
            }
        });
    </script>
</body>
</html>