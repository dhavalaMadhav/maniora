<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PresetMarket | Digital Preset Marketplace</title>
    <style>
        :root {
            --primary: #000000;
            --secondary: #1a1a1a;
            --accent: #0071e3;
            --text: #f5f5f7;
            --text-secondary: #86868b;
            --card-bg: #161617;
            --gap: 24px;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        body {
            background-color: var(--primary);
            color: var(--text);
            line-height: 1.5;
        }
        
        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 0 32px;
        }
        
        header {
            padding: 24px 0;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            position: sticky;
            top: 0;
            background-color: rgba(0,0,0,0.8);
            backdrop-filter: blur(20px);
            z-index: 100;
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 600;
            color: var(--text);
            text-decoration: none;
        }
        
        .nav-links {
            display: flex;
            gap: 32px;
        }
        
        .nav-links a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s;
        }
        
        .nav-links a:hover, .nav-links a.active {
            color: var(--text);
        }
        
        .user-actions {
            display: flex;
            gap: 16px;
            position: relative;
        }
        
        .profile-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            background: transparent;
            border: none;
            color: var(--text);
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
        }
        
        .profile-btn:hover {
            color: var(--accent);
        }
        
        .profile-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            background: var(--secondary);
            border-radius: 8px;
            padding: 8px 0;
            min-width: 180px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.3);
            z-index: 101;
            display: none;
        }
        
        .profile-dropdown.active {
            display: block;
        }
        
        .profile-dropdown a {
            display: block;
            padding: 8px 16px;
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .profile-dropdown a:hover {
            color: var(--text);
            background: rgba(255,255,255,0.05);
        }
        
        .profile-dropdown .divider {
            height: 1px;
            background: rgba(255,255,255,0.1);
            margin: 8px 0;
        }
        
        /* Rest of your existing styles remain the same */
        .btn {
            padding: 8px 16px;
            border-radius: 24px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
        }
        
        .btn-outline {
            background: transparent;
            color: var(--accent);
            border: 1px solid var(--accent);
        }
        
        .btn-outline:hover {
            background: rgba(0, 113, 227, 0.1);
        }
        
        .btn-filled {
            background: var(--accent);
            color: white;
        }
        
        .btn-filled:hover {
            background: #0077ed;
        }
        
        .hero {
            padding: 80px 0;
            text-align: center;
        }
        
        .hero h1 {
            font-size: 56px;
            font-weight: 600;
            margin-bottom: 16px;
            background: linear-gradient(90deg, #fff, #aaa);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .hero p {
            font-size: 24px;
            color: var(--text-secondary);
            max-width: 700px;
            margin: 0 auto 40px;
        }
        
        .search-bar {
            max-width: 600px;
            margin: 0 auto 64px;
            position: relative;
        }
        
        .search-bar input {
            width: 100%;
            padding: 16px 24px;
            border-radius: 32px;
            border: none;
            background: var(--secondary);
            color: var(--text);
            font-size: 16px;
            padding-left: 52px;
        }
        
        .search-bar::before {
            content: "âŒ•";
            position: absolute;
            left: 24px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            font-size: 18px;
        }
        
        .filters {
            display: flex;
            justify-content: center;
            gap: 16px;
            margin-bottom: 48px;
            flex-wrap: wrap;
        }
        
        .filter-btn {
            padding: 8px 16px;
            border-radius: 24px;
            background: var(--secondary);
            color: var(--text-secondary);
            border: none;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .filter-btn.active, .filter-btn:hover {
            background: var(--accent);
            color: white;
        }
        
        .preset-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: var(--gap);
            margin-bottom: 80px;
        }
        
        .preset-card {
            background: var(--card-bg);
            border-radius: 16px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
            cursor: pointer;
        }
        
        .preset-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 16px 32px rgba(0,0,0,0.3);
        }
        
        .preset-image {
            height: 200px;
            background: var(--secondary);
            position: relative;
            overflow: hidden;
        }
        
        .preset-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .preset-info {
            padding: 20px;
        }
        
        .preset-meta {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            color: var(--text-secondary);
            font-size: 14px;
        }
        
        .preset-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 8px;
        }
        
        .preset-description {
            color: var(--text-secondary);
            margin-bottom: 16px;
            font-size: 15px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .preset-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .preset-price {
            font-size: 18px;
            font-weight: 600;
        }
        
        .rating {
            display: flex;
            align-items: center;
            gap: 4px;
            color: var(--text-secondary);
        }
        
        footer {
            padding: 64px 0;
            border-top: 1px solid rgba(255,255,255,0.1);
        }
        
        .footer-content {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 40px;
        }
        
        .footer-column h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 16px;
            color: var(--text);
        }
        
        .footer-column ul {
            list-style: none;
        }
        
        .footer-column ul li {
            margin-bottom: 12px;
        }
        
        .footer-column ul li a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: color 0.3s;
        }
        
        .footer-column ul li a:hover {
            color: var(--text);
        }
        
        .copyright {
            margin-top: 64px;
            text-align: center;
            color: var(--text-secondary);
            font-size: 14px;
        }
        
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 40px;
            }
            
            .hero p {
                font-size: 18px;
            }
            
            .preset-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }
        }

        /* Search results styling */
        .search-results {
            display: none;
            margin-top: 20px;
            padding: 20px;
            background: var(--secondary);
            border-radius: 8px;
        }

        .search-results.active {
            display: block;
        }

        .search-results h3 {
            margin-bottom: 16px;
            color: var(--text);
        }

        .no-results {
            color: var(--text-secondary);
            text-align: center;
            padding: 20px;
        }



        /* Typing animation on the title */
        .hero h1 {
            font-size: 56px;
            font-weight: 600;
            margin-bottom: 16px;
            background: linear-gradient(90deg, #fff, #aaa);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            overflow: hidden; /* Ensures the caret doesn't overflow */
            white-space: nowrap;
            border-right: 3px solid var(--accent);
            width: 0;
            margin-left: auto;
            margin-right: auto;
            animation: typing 3.5s steps(40, end) forwards, blink-caret 0.75s step-end infinite;
        }

        @keyframes typing {
            from { width: 0 }
            to { width: 28ch; }
        }

        @keyframes blink-caret {
            from, to { border-color: transparent }
            50% { border-color: var(--accent) }
        }

    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav>
                <a href="dashboard" class="logo">PresetMarket</a>
                <div class="nav-links">
                    <a href="" class="active">Marketplace</a>
                </div>
                <div class="user-actions">
                    <button class="profile-btn" id="profileBtn">
                        <span class="name" >Hello, User!</span>
                        <span>â–¼</span>
                    </button>
                    <div class="profile-dropdown" id="profileDropdown">
                        <a href="profile.html">Profile Info</a>
                        <a href="settings.html">Settings</a>
                        <div class="divider"></div>
                        <a href="/logout" id="logoutBtn">Logout</a>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    
    <main>
        <section class="hero">
            <div class="container">
                <h1>Elevate Your Creative Workflow</h1>
                <p>Discover and purchase premium digital presets from top creators worldwide</p>
                <div class="search-bar">
                    <input type="text" id="searchInput" placeholder="Search presets, creators, categories..." onkeyup="searchPresets()">
                </div>
                <div id="searchResults" class="search-results">
                    <!-- Search results will be displayed here -->
                </div>
            </div>
        </section>
        
        <section class="container">
            <div class="filters">
                <button class="filter-btn active">All</button>
                <button class="filter-btn">Photography</button>
                <button class="filter-btn">Audio</button>
                <button class="filter-btn">Video</button>
                <button class="filter-btn">Design</button>
                <button class="filter-btn">3D</button>
                <button class="filter-btn">Popular</button>
                <button class="filter-btn">New</button>
            </div>
            
            <div class="preset-grid" id="presetGrid">
                <!-- Preset Card 1 -->
                <div class="preset-card" data-category="photography" data-title="nordic-lightroom-preset" data-creator="studionord" data-tags="lightroom, photo, preset, nordic, minimal">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1504208434309-cb69f4fe52b0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Nordic Lightroom Preset">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>Photography</span>
                        </div>
                        <h3 class="preset-title">Nordic Lightroom Preset</h3>
                        <p class="preset-description">A collection of 10 minimal, clean presets that bring out the natural beauty in your photos with cool tones and soft contrasts.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$24.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.8</span>
                                <span>(127)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Preset Card 2 -->
                <div class="preset-card" data-category="video" data-title="cinematic-luts-pack" data-creator="filmcraft" data-tags="video, luts, cinematic, color grading">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1483728642387-6c3bdd6c93e5?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Cinematic LUTs Pack">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>Video</span>
                        </div>
                        <h3 class="preset-title">Cinematic LUTs Pack</h3>
                        <p class="preset-description">25 professional LUTs designed to give your footage a cinematic look across various lighting conditions.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$39.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.9</span>
                                <span>(89)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Preset Card 3 -->
                <div class="preset-card" data-category="audio" data-title="analog-synth-presets" data-creator="soundlab" data-tags="audio, synth, serum, analog, music">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1508700115892-45ecd05ae2ad?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Analog Synth Presets">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>Audio</span>
                        </div>
                        <h3 class="preset-title">Analog Synth Presets</h3>
                        <p class="preset-description">50+ warm analog-style synth presets for Serum, perfect for lo-fi, house and ambient productions.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$29.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.7</span>
                                <span>(156)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Preset Card 4 -->
                <div class="preset-card" data-category="design" data-title="neon-photoshop-actions" data-creator="pixelfx" data-tags="photoshop, actions, neon, design">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1550751827-4bd374c3f58b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Neon Photoshop Actions">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>Design</span>
                        </div>
                        <h3 class="preset-title">Neon Photoshop Actions</h3>
                        <p class="preset-description">Create stunning neon glow effects with this set of 15 Photoshop actions that work with any photo.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$19.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.5</span>
                                <span>(72)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Preset Card 5 -->
                <div class="preset-card" data-category="3d" data-title="archviz-3d-materials" data-creator="renderstudio" data-tags="3d, materials, pbr, architecture">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1516542076529-1ea3854896f2?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Archviz 3D Materials">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>3D</span>
                        </div>
                        <h3 class="preset-title">Archviz 3D Materials</h3>
                        <p class="preset-description">High-quality PBR materials for architectural visualization, including wood, concrete, metal and glass.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$49.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.9</span>
                                <span>(203)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Preset Card 6 -->
                <div class="preset-card" data-category="photography" data-title="portrait-lightroom-presets" data-creator="portraitpro" data-tags="lightroom, portrait, photo, preset">
                    <div class="preset-image">
                        <img src="https://images.unsplash.com/photo-1516035069371-29a1b244cc32?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="Portrait Lightroom Presets">
                    </div>
                    <div class="preset-info">
                        <div class="preset-meta">
                            <span>Photography</span>
                            <!-- <span>by PortraitPro</span> -->
                        </div>
                        <h3 class="preset-title">Portrait Lightroom Presets</h3>
                        <p class="preset-description">Flattering skin tones and perfect contrast with these 20 portrait-specific Lightroom presets.</p>
                        <div class="preset-footer">
                            <span class="preset-price">$27.99</span>
                            <div class="rating">
                                <span>â˜…</span>
                                <span>4.8</span>
                                <span>(184)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
    
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>Marketplace</h3>
                    <ul>
                        <li><a href="index">Browse Presets</a></li>
                        <li><a href="categories.html">Categories</a></li>
                        <li><a href="creators.html">Top Creators</a></li>
                        <li><a href="new-releases.html">New Releases</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>For Creators</h3>
                    <ul>
                        <li><a href="become-creator.html">Become a Creator</a></li>
                        <li><a href="dashboard.html">Creator Dashboard</a></li>
                        <li><a href="pricing.html">Pricing Guidelines</a></li>
                        <li><a href="resources.html">Resources</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Support</h3>
                    <ul>
                        <li><a href="help.html">Help Center</a></li>
                        <li><a href="contact.html">Contact Us</a></li>
                        <li><a href="faq.html">FAQs</a></li>
                        <li><a href="refund-policy.html">Refund Policy</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Company</h3>
                    <ul>
                        <li><a href="about.html">About</a></li>
                        <li><a href="careers.html">Careers</a></li>
                        <li><a href="blog.html">Blog</a></li>
                        <li><a href="press.html">Press</a></li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>Â© 2023 PresetMarket. All rights reserved.</p>
            </div>
        </div>
    </footer>
<script>
    // Function to fetch presets from the server
    async function fetchPresetsFromDB() {
        try {
            const response = await fetch('/api/presets/get', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (!response.ok) {
                throw new Error('Failed to fetch presets');
            }

            const presets = await response.json();
            return presets;
        } catch (error) {
            console.error('Error fetching presets:', error);
            return [];
        }
    }

    // Function to create a preset card element
    // Function to create a preset card element
function createPresetCard(preset) {
    const card = document.createElement('div');
    card.className = 'preset-card';
    card.setAttribute('data-category', preset.category ? preset.category.toLowerCase() : 'unknown');
    card.setAttribute('data-title', preset.title ? preset.title.toLowerCase().replace(/\s+/g, '-') : 'untitled');
    card.setAttribute('data-creator', preset.creator ? (preset.creator.username || 'unknown') : 'unknown');
    card.setAttribute('data-tags', preset.tags ? preset.tags.join(', ') : '');
    
    // Safely handle potentially undefined properties
    const previewImage = preset.previewImages && preset.previewImages.length > 0 
        ? preset.previewImages[0] 
        : 'https://images.unsplash.com/photo-1504208434309-cb69f4fe52b0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60';
    
    const description = preset.description || 'No description available';
    const price = preset.price ? preset.price.toFixed(2) : '0.00';
    
    card.innerHTML = `
        <div class="preset-image">
            <img src="${previewImage}" alt="${preset.title || 'Preset'}">
        </div>
        <div class="preset-info">
            <div class="preset-meta">
                <span>${preset.category || 'Unknown'}</span>
            </div>
            <h3 class="preset-title">${preset.title || 'Untitled Preset'}</h3>
            <p class="preset-description">${description}</p>
            <div class="preset-footer">
                <span class="preset-price">$${price}</span>
                <div class="rating">
                    <span>â˜…</span>
                    <span>4.5</span>
                    <span>(0)</span>
                </div>
            </div>
        </div>
    `;
    
    // Add click event listener
    card.addEventListener('click', function() {
        const productId = this.getAttribute('data-title');
        const category = this.getAttribute('data-category');
        redirectToProduct(productId, category);
    });
    
    return card;
}

    // Function to load and display presets
    async function loadPresets() {
        const presetGrid = document.getElementById('presetGrid');
        const loadingIndicator = document.createElement('div');
        loadingIndicator.textContent = 'Loading presets...';
        loadingIndicator.style.textAlign = 'center';
        loadingIndicator.style.padding = '20px';
        loadingIndicator.style.color = 'var(--text-secondary)';
        presetGrid.appendChild(loadingIndicator);
        
        try {
            const dbPresets = await fetchPresetsFromDB();
            console.log(dbPresets[0])
            // Remove loading indicator
            presetGrid.removeChild(loadingIndicator);
            
            if (dbPresets.length === 0) {
                const noPresets = document.createElement('div');
                noPresets.textContent = 'No presets found in the database.';
                noPresets.style.textAlign = 'center';
                noPresets.style.padding = '20px';
                noPresets.style.color = 'var(--text-secondary)';
                presetGrid.appendChild(noPresets);
                return;
            }
            
            // Add presets from database to the grid
            dbPresets.forEach(preset => {
                const card = createPresetCard(preset);
                console.log(card)
                presetGrid.appendChild(card);
            });
            
            // Update search functionality to include new cards
            setupSearchFunctionality();
            
        } catch (error) {
            console.error('Error loading presets:', error);
            loadingIndicator.textContent = 'Error loading presets. Please try again later.';
        }
    }

    // Update search functionality to work with dynamically loaded cards
    function setupSearchFunctionality() {
        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('keyup', searchPresets);
    }

    // Call loadPresets when the page loads
    document.addEventListener('DOMContentLoaded', function() {
        loadPresets();
        
        // ... rest of your existing DOMContentLoaded code ...
    });

    // ... rest of your existing JavaScript code ...
</script>
    <script>
        const username = "<%=username%>";
        const name = document.querySelector('.name');
        name.innerText=`hello! ${username}`;
        // Profile dropdown functionality
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');
        
        profileBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('active');
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            profileDropdown.classList.remove('active');
        });
        
        // Logout functionalit
        
        // Add click event listeners to all preset cards
        document.querySelectorAll('.preset-card').forEach(card => {
            card.addEventListener('click', function() {
                const productId = this.getAttribute('data-title');
                const category = this.getAttribute('data-category');
                redirectToProduct(productId, category);
            });
        });

        // Redirect to product page with parameters
        function redirectToProduct(productId, category) {
            // Ensure productId is URL-friendly (replace spaces with hyphens, lowercase, etc.)
            const formattedProductId = productId.toLowerCase().replace(/\s+/g, '-');
            window.location.href = `product?id=${formattedProductId}&category=${category.toLowerCase()}`;
        }

        // Search functionality
        function searchPresets() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const presetGrid = document.getElementById('presetGrid');
            const presetCards = presetGrid.getElementsByClassName('preset-card');
            const searchResults = document.getElementById('searchResults');
            
            // Clear previous search results
            searchResults.innerHTML = '';
            
            if (filter === '') {
                searchResults.classList.remove('active');
                // Show all cards
                for (let i = 0; i < presetCards.length; i++) {
                    presetCards[i].style.display = '';
                }
                return;
            }
            
            let hasResults = false;
            searchResults.classList.add('active');
            
            // Create a results container
            const resultsContainer = document.createElement('div');
            resultsContainer.innerHTML = '<h3>Search Results</h3>';
            
            for (let i = 0; i < presetCards.length; i++) {
                const card = presetCards[i];
                const title = card.getAttribute('data-title');
                const creator = card.getAttribute('data-creator');
                const category = card.getAttribute('data-category');
                const tags = card.getAttribute('data-tags');
                
                if (title.toLowerCase().includes(filter) || 
                    creator.toLowerCase().includes(filter) || 
                    category.toLowerCase().includes(filter) || 
                    tags.toLowerCase().includes(filter)) {
                    hasResults = true;
                    card.style.display = '';
                    
                    // Add to search results
                    const resultItem = document.createElement('div');
                    resultItem.className = 'preset-card';
                    resultItem.innerHTML = card.innerHTML;
                    resultsContainer.appendChild(resultItem);
                } else {
                    card.style.display = 'none';
                }
            }
            
            if (hasResults) {
                searchResults.appendChild(resultsContainer);
            } else {
                searchResults.innerHTML = '<div class="no-results">No presets found matching your search.</div>';
            }
        }

        // Filter buttons functionality
        document.querySelectorAll('.filter-btn').forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                document.querySelectorAll('.filter-btn').forEach(btn => {
                    btn.classList.remove('active');
                });
                
                // Add active class to clicked button
                this.classList.add('active');
                
                const filter = this.textContent.toLowerCase();
                const presetGrid = document.getElementById('presetGrid');
                const presetCards = presetGrid.getElementsByClassName('preset-card');
                
                if (filter === 'all') {
                    // Show all cards
                    for (let i = 0; i < presetCards.length; i++) {
                        presetCards[i].style.display = '';
                    }
                } else {
                    // Filter by category
                    for (let i = 0; i < presetCards.length; i++) {
                        const card = presetCards[i];
                        const category = card.getAttribute('data-category');
                        
                        if (category.includes(filter)) {
                            card.style.display = '';
                        } else {
                            card.style.display = 'none';
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>