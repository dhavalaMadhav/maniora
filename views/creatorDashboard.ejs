<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard | PresetMarket</title>
    <style>
        :root {
            --primary: #000000;
            --secondary: #1a1a1a;
            --accent: #0071e3;
            --text: #f5f5f7;
            --text-secondary: #86868b;
            --card-bg: #161617;
            --gap: 24px;
            --success: #34c759;
            --warning: #ff9500;
            --danger: #ff3b30;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        body {
            background-color: var(--primary);
            color: var(--text);
            line-height: 1.5;
        }
        
        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 0 32px;
        }
        
        header {
            padding: 24px 0;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            position: sticky;
            top: 0;
            background-color: rgba(0,0,0,0.8);
            backdrop-filter: blur(20px);
            z-index: 100;
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 600;
            color: var(--text);
            text-decoration: none;
        }
        
        .nav-links {
            display: flex;
            gap: 32px;
        }
        
        .nav-links a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 16px;
            transition: color 0.3s;
        }
        
        .nav-links a:hover, .nav-links a.active {
            color: var(--text);
        }
        
        .user-actions {
            display: flex;
            gap: 16px;
            position: relative;
        }
        
        .profile-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            background: transparent;
            border: none;
            color: var(--text);
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
        }
        
        .profile-btn:hover {
            color: var(--accent);
        }
        
        .profile-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            background: var(--secondary);
            border-radius: 8px;
            padding: 8px 0;
            min-width: 180px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.3);
            z-index: 101;
            display: none;
        }
        
        .profile-dropdown.active {
            display: block;
        }
        
        .profile-dropdown a {
            display: block;
            padding: 8px 16px;
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .profile-dropdown a:hover {
            color: var(--text);
            background: rgba(255,255,255,0.05);
        }
        
        .profile-dropdown .divider {
            height: 1px;
            background: rgba(255,255,255,0.1);
            margin: 8px 0;
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 24px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-outline {
            background: transparent;
            color: var(--accent);
            border: 1px solid var(--accent);
        }
        
        .btn-outline:hover {
            background: rgba(0, 113, 227, 0.1);
        }
        
        .btn-filled {
            background: var(--accent);
            color: white;
        }
        
        .btn-filled:hover {
            background: #0077ed;
        }
        
        .btn-success {
            background: var(--success);
            color: white;
        }
        
        .btn-success:hover {
            background: #30b34e;
        }
        
        .btn-warning {
            background: var(--warning);
            color: white;
        }
        
        .btn-warning:hover {
            background: #e68600;
        }
        
        .btn-danger {
            background: var(--danger);
            color: white;
        }
        
        .btn-danger:hover {
            background: #e6352a;
        }
        
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 40px 0 24px;
        }
        
        .dashboard-title {
            font-size: 32px;
            font-weight: 600;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: var(--gap);
            margin-bottom: 40px;
        }
        
        .stat-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        
        .stat-value {
            font-size: 32px;
            font-weight: 600;
        }
        
        .stat-label {
            color: var(--text-secondary);
            font-size: 14px;
        }
        
        .preset-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 80px;
        }
        
        .preset-table th {
            text-align: left;
            padding: 12px 16px;
            color: var(--text-secondary);
            font-weight: 500;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }
        
        .preset-table td {
            padding: 16px;
            border-bottom: 1px solid rgba(255,255,255,0.05);
            vertical-align: middle;
        }
        
        .preset-table tr:last-child td {
            border-bottom: none;
        }
        
        .preset-table tr:hover td {
            background: rgba(255,255,255,0.02);
        }
        
        .preset-info-cell {
            display: flex;
            align-items: center;
            gap: 16px;
        }
        
        .preset-thumbnail {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            object-fit: cover;
            background: var(--secondary);
        }
        
        .preset-title {
            font-weight: 500;
            margin-bottom: 4px;
        }
        
        .preset-category {
            font-size: 12px;
            color: var(--text-secondary);
            background: rgba(255,255,255,0.1);
            padding: 2px 8px;
            border-radius: 4px;
            display: inline-block;
        }
        
        .status-badge {
            font-size: 12px;
            padding: 4px 8px;
            border-radius: 12px;
            font-weight: 500;
        }
        
        .status-published {
            background: rgba(52, 199, 89, 0.2);
            color: var(--success);
        }
        
        .status-draft {
            background: rgba(255, 149, 0, 0.2);
            color: var(--warning);
        }
        
        .status-archived {
            background: rgba(255, 59, 48, 0.2);
            color: var(--danger);
        }
        
        .action-buttons {
            display: flex;
            gap: 8px;
        }
        
        .action-btn {
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            font-size: 16px;
            transition: color 0.3s;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .action-btn:hover {
            background: rgba(255,255,255,0.1);
            color: var(--text);
        }
        
        .edit-btn:hover {
            color: var(--accent);
        }
        
        .delete-btn:hover {
            color: var(--danger);
        }
        
        .no-presets {
            text-align: center;
            padding: 60px 0;
            color: var(--text-secondary);
        }
        
        .no-presets p {
            margin-bottom: 20px;
        }
                footer {
            padding: 64px 0;
            border-top: 1px solid rgba(255,255,255,0.1);
        }
        
        .footer-content {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 40px;
        }
        
        .footer-column h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 16px;
            color: var(--text);
        }
        
        .footer-column ul {
            list-style: none;
        }
        
        .footer-column ul li {
            margin-bottom: 12px;
        }
        
        .footer-column ul li a {
            color: var(--text-secondary);
            text-decoration: none;
            font-size: 14px;
            transition: color 0.3s;
        }
        
        .footer-column ul li a:hover {
            color: var(--text);
        }
        
        .copyright {
            margin-top: 64px;
            text-align: center;
            color: var(--text-secondary);
            font-size: 14px;
        }
            
        
        @media (max-width: 768px) {
            .preset-table {
                display: block;
                overflow-x: auto;
            }
            
            .dashboard-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav>
                <a href="creatorDashboard" class="logo">PresetMarket</a>
                <div class="nav-links">
                    <a href="creatorDashboard" class="active">Dashboard</a>
                </div>
                <div class="user-actions">
                    <button class="profile-btn" id="profileBtn">
                        <span class="name">Admin User</span>
                        <span>▼</span>
                    </button>
                    <div class="profile-dropdown" id="profileDropdown">
                        <a href="profile.html">Profile Settings</a>
                        <a href="settings.html">Admin Settings</a>
                        <div class="divider"></div>
                        <a href="logout" id="logoutBtn">Logout</a>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    
    <main class="container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Your Presets</h1>
            <a href="/creatorUpload" class="btn btn-filled">
                <span>+</span>
                <span>Add New Preset</span>
            </a>
        </div>
        
        <div class="stats-grid">
        <div class="stat-card">
            <span class="stat-value" id="totalPresets">0</span>
            <span class="stat-label">Total Presets</span>
        </div>
        <div class="stat-card">
            <span class="stat-value" id="publishedPresets">0</span>
            <span class="stat-label">Published</span>
        </div>
        <div class="stat-card">
            <span class="stat-value" id="draftPresets">0</span>
            <span class="stat-label">Drafts</span>
        </div>
        <div class="stat-card">
            <span class="stat-value" id="archivedPresets">0</span>
            <span class="stat-label">Archived</span>
        </div>
        <div class="stat-card">
            <span class="stat-value" id="totalEarnings">$0</span>
            <span class="stat-label">Total Earnings</span>
        </div>
    </div>
        
        <table class="preset-table">
            <thead>
                <tr>
                    <th>Preset</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Status</th>
                    <th>Sales</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="presetsTableBody">
                <!-- Preset rows will be loaded here dynamically -->
                <tr>
                    <td>
                        <div class="preset-info-cell">
                            <img src="https://images.unsplash.com/photo-1504208434309-cb69f4fe52b0?ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=60" class="preset-thumbnail" alt="Nordic Preset">
                            <div>
                                <div class="preset-title">Nordic Lightroom Preset</div>
                                <span class="preset-category">Photography</span>
                            </div>
                        </div>
                    </td>
                    <td>Photography</td>
                    <td>$24.99</td>
                    <td><span class="status-badge status-published">Published</span></td>
                    <td>127</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" title="Edit">✏️</button>
                            <button class="action-btn delete-btn" title="Delete">🗑️</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="preset-info-cell">
                            <img src="https://images.unsplash.com/photo-1483728642387-6c3bdd6c93e5?ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=60" class="preset-thumbnail" alt="Cinematic LUTs">
                            <div>
                                <div class="preset-title">Cinematic LUTs Pack</div>
                                <span class="preset-category">Video</span>
                            </div>
                        </div>
                    </td>
                    <td>Video</td>
                    <td>$39.99</td>
                    <td><span class="status-badge status-published">Published</span></td>
                    <td>89</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" title="Edit">✏️</button>
                            <button class="action-btn delete-btn" title="Delete">🗑️</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="preset-info-cell">
                            <img src="https://images.unsplash.com/photo-1508700115892-45ecd05ae2ad?ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=60" class="preset-thumbnail" alt="Synth Presets">
                            <div>
                                <div class="preset-title">Analog Synth Presets</div>
                                <span class="preset-category">Audio</span>
                            </div>
                        </div>
                    </td>
                    <td>Audio</td>
                    <td>$29.99</td>
                    <td><span class="status-badge status-published">Published</span></td>
                    <td>156</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" title="Edit">✏️</button>
                            <button class="action-btn delete-btn" title="Delete">🗑️</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="preset-info-cell">
                            <img src="https://images.unsplash.com/photo-1550751827-4bd374c3f58b?ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=60" class="preset-thumbnail" alt="Neon Actions">
                            <div>
                                <div class="preset-title">Neon Photoshop Actions</div>
                                <span class="preset-category">Design</span>
                            </div>
                        </div>
                    </td>
                    <td>Design</td>
                    <td>$19.99</td>
                    <td><span class="status-badge status-draft">Draft</span></td>
                    <td>0</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" title="Edit">✏️</button>
                            <button class="action-btn delete-btn" title="Delete">🗑️</button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="preset-info-cell">
                            <img src="https://images.unsplash.com/photo-1516542076529-1ea3854896f2?ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=60" class="preset-thumbnail" alt="3D Materials">
                            <div>
                                <div class="preset-title">Archviz 3D Materials</div>
                                <span class="preset-category">3D</span>
                            </div>
                        </div>
                    </td>
                    <td>3D</td>
                    <td>$49.99</td>
                    <td><span class="status-badge status-archived">Archived</span></td>
                    <td>203</td>
                    <td>
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" title="Edit">✏️</button>
                            <button class="action-btn delete-btn" title="Delete">🗑️</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        
        <div id="noPresetsMessage" class="no-presets" style="display: none;">
            <p>You haven't uploaded any presets yet.</p>
            <a href="/creatorUpload" class="btn btn-filled">
                <span>+</span>
                <span>Upload Your First Preset</span>
            </a>
        </div>
    </main>
    
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>Marketplace</h3>
                    <ul>
                        <li><a href="index">Browse Presets</a></li>
                        <li><a href="categories.html">Categories</a></li>
                        <li><a href="creators.html">Top Creators</a></li>
                        <li><a href="new-releases.html">New Releases</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>For Creators</h3>
                    <ul>
                        <li><a href="become-creator.html">Become a Creator</a></li>
                        <li><a href="dashboard.html">Creator Dashboard</a></li>
                        <li><a href="pricing.html">Pricing Guidelines</a></li>
                        <li><a href="resources.html">Resources</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Support</h3>
                    <ul>
                        <li><a href="help.html">Help Center</a></li>
                        <li><a href="contact.html">Contact Us</a></li>
                        <li><a href="faq.html">FAQs</a></li>
                        <li><a href="refund-policy.html">Refund Policy</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Company</h3>
                    <ul>
                        <li><a href="about.html">About</a></li>
                        <li><a href="careers.html">Careers</a></li>
                        <li><a href="blog.html">Blog</a></li>
                        <li><a href="press.html">Press</a></li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>© 2023 PresetMarket. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        const username = "<%=username%>";
        const name = document.querySelector('.name');
        name.innerText=`hello! ${username}`;

        // Profile dropdown functionality
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');
        
        profileBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('active');
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            profileDropdown.classList.remove('active');
        });
        


        // Function to fetch admin's presets from the server
        async function fetchAdminPresets() {
            try {
                const response = await fetch('/api/presets/get', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + localStorage.getItem('adminToken')
                    }
                });

                if (!response.ok) {
                    throw new Error('Failed to fetch presets');
                }

                const presets = await response.json();
                return presets;
            } catch (error) {
                console.error('Error fetching admin presets:', error);
                return [];
            }
        }

                // Function to calculate statistics from presets data
        function calculateStatistics(presets) {
            let total = presets.length;
            let published = presets.length;
            let drafts = 0;
            let archived = 0;
            let earnings = 0;

            presets.forEach(preset => {
                earnings+=Number(preset.price);
                if (preset.status === 'published') {
                    published++;
                    // Only count earnings for published presets
                    earnings += (preset.price || 0) * (preset.sales || 0);
                } else if (preset.status === 'draft') {
                    drafts++;
                } else if (preset.status === 'archived') {
                    archived++;
                }
            });

            return {
                total,
                published,
                drafts,
                archived,
                earnings
            };
        }

        // Function to update statistics in the UI
        function updateStatistics(stats) {
            document.getElementById('totalPresets').textContent = stats.total;
            document.getElementById('publishedPresets').textContent = stats.published;
            document.getElementById('draftPresets').textContent = stats.drafts;
            document.getElementById('archivedPresets').textContent = stats.archived;
            document.getElementById('totalEarnings').textContent = `$${stats.earnings.toFixed(2)}`;
        }

        // Function to populate the presets table and update statistics
        async function loadAdminPresets() {
            const tableBody = document.getElementById('presetsTableBody');
            const noPresetsMessage = document.getElementById('noPresetsMessage');
            
            // Show loading state
            tableBody.innerHTML = '<tr><td colspan="6" style="text-align: center; padding: 40px;">Loading presets...</td></tr>';
            
            try {
                const presets = await fetchAdminPresets();
                
                // Calculate statistics from the presets data
                const stats = calculateStatistics(presets);
                
                // Update the statistics in the UI
                updateStatistics(stats);
                
                if (presets.length === 0) {
                    tableBody.style.display = 'none';
                    noPresetsMessage.style.display = 'block';
                    return;
                }
                
                // Clear loading state
                tableBody.innerHTML = '';
                
                // Add presets to the table
                presets.forEach(preset => {
                    const row = document.createElement('tr');
                    
                    // Determine status badge class
                    let statusClass = 'status-published';
                    let statusText = 'Published';
                    if (preset.status === 'draft') {
                        statusClass = 'status-draft';
                        statusText = 'Draft';
                    } else if (preset.status === 'archived') {
                        statusClass = 'status-archived';
                        statusText = 'Archived';
                    }
                    
                    row.innerHTML = `
                        <td>
                            <div class="preset-info-cell">
                                <img src="${preset.previewImages[0] || 'https://via.placeholder.com/60'}" class="preset-thumbnail" alt="${preset.title}">
                                <div>
                                    <div class="preset-title">${preset.title}</div>
                                    <span class="preset-category">${preset.category}</span>
                                </div>
                            </div>
                        </td>
                        <td>${preset.category}</td>
                        <td>$${preset.price.toFixed(2)}</td>
                        <td><span class="status-badge ${statusClass}">${statusText}</span></td>
                        <td>${preset.sales || 0}</td>
                        <td>
                            <div class="action-buttons">
                                <button class="action-btn edit-btn" title="Edit" data-id="${preset._id}">✏️</button>
                                <button class="action-btn delete-btn" title="Delete" data-id="${preset._id}">🗑️</button>
                            </div>
                        </td>
                    `;
                    
                    tableBody.appendChild(row);
                });
                
                // Add event listeners to action buttons
                document.querySelectorAll('.edit-btn').forEach(btn => {
                    btn.addEventListener('click', function(e) {
                        e.stopPropagation();
                        const presetId = this.getAttribute('data-id');
                        editPreset(presetId);
                    });
                });
                
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function(e) {
                        e.stopPropagation();
                        const presetId = this.getAttribute('data-id');
                        deletePreset(presetId);
                    });
                });
                
                // Add click event to entire row to view preset
                document.querySelectorAll('#presetsTableBody tr').forEach(row => {
                    row.addEventListener('click', function() {
                        const presetId = this.querySelector('.edit-btn').getAttribute('data-id');
                        viewPreset(presetId);
                    });
                });
                
            } catch (error) {
                console.error('Error loading admin presets:', error);
                tableBody.innerHTML = '<tr><td colspan="6" style="text-align: center; padding: 40px; color: var(--danger);">Error loading presets. Please try again.</td></tr>';
            }
        }

        // Previous functions (editPreset, viewPreset, deletePreset) remain the sam

        // Function to handle preset edit
        function editPreset(presetId) {
            // Redirect to edit page with the preset ID
            window.location.href = `/creatorUpload?edit=${presetId}`;
        }

        // Function to handle preset view
        function viewPreset(presetId) {
            // Redirect to view page or open modal
            console.log(`Viewing preset ${presetId}`);
            // window.location.href = `/preset/${presetId}`;
        }

        // Function to handle preset deletion
        async function deletePreset(presetId) {
            if (confirm('Are you sure you want to delete this preset? This action cannot be undone.')) {
                try {
                    const response = await fetch(`/api/presets/${presetId}`, {
                        method: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('adminToken')
                        }
                    });
                    
                    if (!response.ok) {
                        throw new Error('Failed to delete preset');
                    }
                    
                    alert('Preset deleted successfully');
                    // Refresh the presets list
                    loadAdminPresets();
                } catch (error) {
                    console.error('Error deleting preset:', error);
                    alert('Failed to delete preset. Please try again.');
                }
            }
        }

        // Load presets when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadAdminPresets();
        });
    </script>
</body>
</html>